"""
Первый класс
Создайте класс book с атрибутами:

Материал страниц
наличие текста
название книги
автор
кол-во страниц
ISBN
флаг зарезервирована ли книга или нет (True/False).
Какие-то из атрибутов будут общими для всех книг (материал, наличие текста), какие-то индивидуальными.
Создайте несколько (штук 5) экземпляров разных книг.
После создания пометьте одну книгу как зарезервированную.
Распечатайте детали о каждой книге в таком виде:
Если книга зарезервирована:

Название: Идиот, Автор: Достоевский, страниц: 500, материал: бумага, зарезервирована
если не зарезервирована:

Название: Идиот, Автор: Достоевский, страниц: 500, материал: бумага
Второй класс
Создайте дочерний класс для первого. Это будет класс для школьных учебников. В нем будут дополнительные атрибуты:

Предмет (типа математика, история, география),
класс (школьный класс, для которого этот учебник)(осторожно с названием переменной. class - зарезервированное слово),
наличие заданий (bool)
Создайте несколько экземпляров учебников.
После создания пометьте один учебник как зарезервированный.
Распечатайте детали о каждом учебнике в таком виде: Если учебник зарезервирован:

Название: Алгебра, Автор: Иванов, страниц: 200, предмет: Математика, класс: 9, зарезервирована
если не зарезервирован:

Название: Алгебра, Автор: Иванов, страниц: 200, предмет: Математика, класс: 9

"""


class Book:
    material = "бумага"
    has_text = True

    def __init__(self, title, author, pages, isbn, reserved=False):
        self.title = title
        self.author = author
        self.pages = pages
        self.isbn = isbn
        self.reserved = reserved

    def __str__(self):
        status = "зарезервирована" if self.reserved else ""
        return f"Название: {self.title}, Автор: {self.author}, страниц: {self.pages}," \
               f"материал: {self.material}, {status}"


class Textbook(Book):
    def __init__(self, title, author, pages, isbn, subject, grade, exercises=False, reserved=False):
        super().__init__(title, author, pages, isbn, reserved)
        self.subject = subject
        self.grade = grade
        self.exercises = exercises

    def __str__(self):
        status = "зарезервирована" if self.reserved else ""
        return f"Название: {self.title}, Автор: {self.author}, страниц: {self.pages}," \
               f"предмет: {self.subject}, класс: {self.grade}, {status}"


# Создание экземпляров книг
book1 = Book("Идиот", "Достоевский", 500, "1234567890")
book2 = Book("Анна Каренина", "Толстой", 800, "9876543210")
book3 = Book("Война и мир", "Толстой", 1200, "1122334455")
book4 = Book("Преступление и наказание", "Достоевский", 600, "6789012345")
book5 = Book("Мастер и Маргарита", "Булгаков", 400, "5678901234")

# Пометка одной книги как зарезервированной
book5.reserved = True

# Печать деталей о книгах
print("Книги:")
for book in [book1, book2, book3, book4, book5]:
    print(book)

# Создание экземпляров учебников
textbook1 = Textbook("Алгебра", "Иванов", 200, "0987654321", "Математика", 9, True)
textbook2 = Textbook("Геометрия", "Петров", 300, "1098765432", "Геометрия", 10, False)
textbook3 = Textbook("История России", "Сидоров", 400, "1109876543", "История", 11, True)

# Пометка одного учебника как зарезервированного
textbook3.reserved = True

# Печать деталей об учебниках
print("\nУчебники:")
for textbook in [textbook1, textbook2, textbook3]:
    print(textbook)
